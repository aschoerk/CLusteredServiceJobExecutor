---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  namespace: minikube-kafka
  labels:
    app: broker
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: 9092
    targetPort: 9092
  selector:
    app: broker
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: broker
  namespace: minikube-kafka
spec:
  selector:
    matchLabels:
      app: broker
  serviceName: "kafka-service"
  replicas: 2
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: broker # has to match .spec.selector.matchLabels
    spec:
      containers:
        - name: broker
          image: minikube-kafka:latest
          volumeMounts:
          - name: kafka-pv
            mountPath: /opt/kafka-pv
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 9092
            name: plaintext
          # - containerPort: 9999
          #   name: jmx
          env:
            - name: KAFKA_ADVERTISED_PORT
              value: "9092"
            - name: BROKER_ID_COMMAND
              value: "hostname | cut -d'-' -f2"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper-service:2181"
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://:9092"
            # - name: KAFKA_JMX_OPTS
            #  value: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.port=9999 -Dcom.sun.management.jmxremote.rmi.port=9999 -Djava.rmi.server.hostname=127.0.0.1"
            # - name: JMX_PORT
            #  value: "9999"
  volumeClaimTemplates:
  - metadata:
      name: kafka-pv
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
      storageClassName: standard

